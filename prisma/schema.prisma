generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model arena {
  id        Int     @id @default(autoincrement())
  nombre    String  @unique
  imagen    String? @db.Text()
  lugar_id  Int?
  capacidad Int?
  direccion String? @db.VarChar(255)
  lugar     lugar?  @relation(fields: [lugar_id], references: [id])
}

model club_gym {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  address         String?           @db.Text()
  About           String?           @db.Text()
  club_gym_member club_gym_member[]
}

model club_gym_member {
  club_gym_id Int
  person_id   Int
  person      person   @relation(fields: [person_id], references: [id])
  club_gym    club_gym @relation(fields: [club_gym_id], references: [id])

  @@id([club_gym_id, person_id])
}

model boxeador {
  id               Int                @id @default(autoincrement())
  person_id        Int
  person           person             @relation("person", fields: [person_id], references: [id])
  encuentros       Int?
  rondas           Int?
  categoria_id     Int?
  genero_id        Int?
  fecha_nacimiento DateTime?          @db.Date
  guardia_id       Int?
  altura           Int?
  alcance          Int?
  manager_id       Int?
  promotor_id      Int?
  victorias        Int?
  derrotas         Int?
  empates          Int?
  victorias_ko     Int?
  derrotas_ko      Int?
  categoria        categoria?         @relation(fields: [categoria_id], references: [id])
  genero           genero?            @relation(fields: [genero_id], references: [id])
  guardia          guardia?           @relation(fields: [guardia_id], references: [id])
  manager          person?            @relation("manager", fields: [manager_id], references: [id])
  promotor         person?            @relation("promotor", fields: [promotor_id], references: [id])
  titulos          boxeador_titulos[]
  boxeador1        encuentro[]        @relation("boxeador1")
  boxeador2        encuentro[]        @relation("boxeador2")
}

model boxeador_titulos {
  boxeador_id Int
  titulo_id   Int
  boxeador    boxeador @relation(fields: [boxeador_id], references: [id])
  titulo      titulo   @relation(fields: [titulo_id], references: [id])

  @@id([boxeador_id, titulo_id])
}

model categoria {
  id        Int        @id @default(autoincrement())
  categoria String     @unique
  boxeador  boxeador[]
}

//todo agregar referi y los 3 jueces y tiempo en q se dio el ko y ademas puntuaciones para jueces 60-54 58-56 60-58
model encuentro {
  id                    Int                    @id @default(autoincrement())
  fecha                 DateTime               @db.Date
  boxeador1_id          Int
  peso_boxeador1        Float?                 
  boxeador2_id          Int
  peso_boxeador2        Float?                 
  resultado_id          Int?
  asaltos_totales       Int?
  asaltos_boxeados      Int?
  boxeador1             boxeador               @relation("boxeador1", fields: [boxeador1_id], references: [id])
  boxeador2             boxeador               @relation("boxeador2", fields: [boxeador2_id], references: [id])
  resultados_encuentros resultados_encuentros? @relation(fields: [resultado_id], references: [id])
  evento_encuentro      evento_encuentro[]
}

model evento {
  id               Int                @id @default(autoincrement())
  nombre           String            
  fecha            DateTime           @db.Date
  lugar_id         Int?
  comision         String?            
  promotor         String?            
  matchmaker       String?            
  doctor           String?            
  liveStream       Boolean?
  imagen           String?            @db.Text()
  resumen          String?            
  lugar            lugar?             @relation(fields: [lugar_id], references: [id])
  evento_encuentro evento_encuentro[]
}

model evento_encuentro {
  evento_id    Int
  encuentro_id Int
  encuentro    encuentro @relation(fields: [encuentro_id], references: [id])
  evento       evento    @relation(fields: [evento_id], references: [id])

  @@id([evento_id, encuentro_id])
}

model genero {
  id       Int        @id @default(autoincrement())
  genero   String     @unique
  boxeador boxeador[]
}

model guardia {
  id       Int        @id @default(autoincrement())
  guardia  String     @unique
  boxeador boxeador[]
}

model lugar {
  id           Int        @id @default(autoincrement())
  pais_id      Int?
  provincia_id Int?
  ciudad_id    Int?
  pais         pais?      @relation(fields: [pais_id], references: [id])
  provincia    provincia? @relation(fields: [provincia_id], references: [id])
  ciudad       ciudad?    @relation(fields: [ciudad_id], references: [id])

  // Otras relaciones
  arena             arena[]
  evento            evento[]
  person_residence  person[] @relation("residence")
  person_birthplace person[] @relation("birthplace")

  @@index([pais_id])
  @@index([provincia_id])
  @@index([ciudad_id])
}

model role {
  person_id    Int
  person       person    @relation(fields: [person_id], references: [id])
  role_type_id Int
  role_type    role_type @relation(fields: [role_type_id], references: [id])
  career_start DateTime  @db.Date
  career_end   DateTime? @db.Date
  status       Boolean
  company      String?   
  contact      String?   

  @@id([person_id, role_type_id])
}

model role_type {
  id        Int    @id @default(autoincrement())
  role_type String @unique
  role      role[]
}

model person {
  id               Int               @id @default(autoincrement())
  image            String?           @db.Text()
  name             String            
  birthname        String?           
  alias            String?           
  trainer_id       Int?
  trainer          person?           @relation("trainer", fields: [trainer_id], references: [id])
  nationality_id   Int
  residence_id     Int?
  birthplace_id    Int?
  nationality      nacionalidad      @relation(fields: [nationality_id], references: [id])
  residence        lugar?            @relation("residence", fields: [residence_id], references: [id])
  birthplace       lugar?            @relation("birthplace", fields: [birthplace_id], references: [id])
  person           boxeador[]        @relation("person")
  manager          boxeador[]        @relation("manager")
  promotor         boxeador[]        @relation("promotor")
  trainer_toPerson person[]          @relation("trainer")
  club_gym_member  club_gym_member[]
  role             role[]
}

model nacionalidad {
  id           Int      @id @default(autoincrement())
  nacionalidad String   @unique
  countryCode  String   @unique
  person       person[]
}

model pais {
  id         Int         @id @default(autoincrement())
  nombre     String      @unique
  provincias provincia[]
  lugares    lugar[]
}

model provincia {
  id       Int      @id @default(autoincrement())
  nombre   String   @unique
  pais_id  Int
  pais     pais     @relation(fields: [pais_id], references: [id])
  ciudades ciudad[]
  lugares  lugar[]

  @@unique([nombre, pais_id])
  @@index([pais_id])
}

model ciudad {
  id           Int       @id @default(autoincrement())
  nombre       String    @unique
  provincia_id Int
  provincia    provincia @relation(fields: [provincia_id], references: [id])
  lugares      lugar[]

  @@unique([nombre, provincia_id])
  @@index([provincia_id])
}

model resultados_encuentros {
  id        Int         @id @default(autoincrement())
  resultado String      @unique
  encuentro encuentro[]
}

model titulo {
  id               Int                @id @default(autoincrement())
  titulo           String             @unique
  boxeador_titulos boxeador_titulos[]
}
